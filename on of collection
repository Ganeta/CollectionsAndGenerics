package week2;

import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

public class TwiceElementCollection implements Collection {

    Set<Object> elements;

    public TwiceElementCollection() {

        elements = new HashSet();
    }

    @Override
    public boolean add(Object e) {
        if (!elements.add(e)) {
            elements.remove(e);
            return false;
        }
        return true;
    }

    @Override
    public int size() {
        return elements.size();
    }

    @Override
    public boolean isEmpty() {
        return elements.isEmpty();
    }

    @Override
    public boolean contains(Object o) {
        return elements.contains(o);
    }

    @Override
    public Iterator iterator() {
        return elements.iterator();
    }

    @Override
    public Object[] toArray() {
        return elements.toArray();
    }

    @Override
    public Object[] toArray(Object[] a) {
        return elements.toArray();
    }

    @Override
    public boolean remove(Object o) {
        return elements.remove(o);
    }

    @Override
    public boolean containsAll(Collection c) {
        return elements.containsAll(c);
    }

    @Override
    public boolean addAll(Collection c) {
        for (Object object : c) {
            if (!elements.add(object)) {
                elements.remove(object);
                return false;
            }
        }

        return elements.addAll(c);
    }

    @Override
    public boolean removeAll(Collection c) {
        return elements.removeAll(c);
    }

    @Override
    public boolean retainAll(Collection c) {
        return elements.retainAll(c);
    }

    @Override
    public void clear() {
        elements.clear();
    }

    public static void main(String[] args) {

        TwiceElementCollection myTest = new TwiceElementCollection();
        myTest.add(1);
        myTest.add(2);
        myTest.add(2);
        myTest.add(3);

        Object obj[] = myTest.toArray();

        for (int i = 0; i < obj.length; i++) {
            System.out.println(obj[i]);
        }
    }
}
